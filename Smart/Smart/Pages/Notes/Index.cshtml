@page
@using System.Linq;
@using Smart.Utility;
@model Smart.Pages.Notes.IndexModel

@{
    ViewData["Title"] = "Note Portal";
}

<h1>Index</h1>

<div class="col-4 text-left">
    <a asp-page="Create" class="btn btn-info">Create New</a>
</div>
<div class="backgroundWhite container">


    @if (true)
    {
        List<string> list = new List<string>();

        @foreach (var item in Model.Note)
        {

            @if (User.IsInRole(SD.AdminUser))
            {
                if (!list.Contains(item.NoteType.Description))
                {
                    <div class="row" id="menu-wrapper">
                        <partial name="_NotePartialView"
                                 model="@Model.Note.Where(m => m.NoteType.Description.Equals(item.NoteType.Description))" />
                    </div>
                    list.Add(item.NoteType.Description);
                }
            }

            else
            {
                @if (User.IsInRole(SD.InstructorUser))
                {
                    if (item.NoteType.Description.Equals("Instructor Note"))
                    {
                        if (!list.Contains(item.NoteType.Description))
                        {
                            <div class="row" id="menu-wrapper">
                                <partial name="_NotePartialView"
                                         model="@Model.Note.Where(m => m.NoteType.Description.Equals(item.NoteType.Description))" />
                            </div>
                            list.Add(item.NoteType.Description);
                        }
                    }
                }

                @if (User.IsInRole(SD.SocialWorkerUser))
                {
                    if (item.NoteType.Description.Equals("SocialWorker Note"))
                    {
                        if (!list.Contains(item.NoteType.Description))
                        {
                            <div class="row" id="menu-wrapper">
                                <partial name="_NotePartialView"
                                         model="@Model.Note.Where(m => m.NoteType.Description.Equals(item.NoteType.Description))" />
                            </div>
                            list.Add(item.NoteType.Description);
                        }
                    }
                }

                @if (User.IsInRole(SD.RaterUser))
                {
                    if (item.NoteType.Description.Equals("Rating Note"))
                    {
                        if (!list.Contains(item.NoteType.Description))
                        {
                            <div class="row" id="menu-wrapper">
                                <partial name="_NotePartialView"
                                         model="@Model.Note.Where(m => m.NoteType.Description.Equals(item.NoteType.Description))" />
                            </div>
                            list.Add(item.NoteType.Description);
                        }
                    }
                }
            }
        }

    }
</div>
