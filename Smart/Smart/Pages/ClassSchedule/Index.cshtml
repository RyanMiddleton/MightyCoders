@page

@model Smart.Pages.ClassSchedule.IndexModel
@using Smart.Utility
@{
    ViewData["Title"] = "Class Schedule";
}

@{
    var currentDay = 8;
}
<div class="container">

    <div class="row py-3">
        <h2>Class Schedule</h2>
    </div>
    <div class="row">
        <h6>Select Term:</h6>
    </div>
    <form method="get" id="TermForm">
        <div class="row pb-3">
            <select name="termId" id="TermId" asp-items="Model.Terms" class="form-control"></select>
        </div>
    </form>

    <form method="post" asp-page-handler="ScheduleClass" id="addClassForm">
        @if (Model.ClassSelectList != null && Model.ClassSelectList.Count != 0)
        {
            <div class="row">
                <h6>Select Class:</h6>
            </div>
            <div class="row pb-3">
                <select name="classId" id="ClassId" asp-items="Model.ClassSelectList" class="form-control"></select>
            </div>
        }

        @for (int i = 0; i < Model.ScheduleAvailabilities.Count; i++)
        {
            @if (currentDay != Model.ScheduleAvailabilities[i].DayOfWeek)
            {
                SD.EDayOfWeek DayOfWeek = (SD.EDayOfWeek)Model.ScheduleAvailabilities[i].DayOfWeek;
                currentDay = Model.ScheduleAvailabilities[i].DayOfWeek;
                @if (currentDay < 8)
                {
                    @:</ul>
                    @:</div>
            @:<div class="pb-3"></div>
                }
                @:<div class="card">
                    @:<div class="card-header">
                        @:<h5>@DayOfWeek</h5>
                    @:</div>
                    @:<ul class="list-group list-group-flush">
}
            <li class="list-group-item">
                <div class="d-inline">
                    @Html.DisplayFor(s => Model.ScheduleAvailabilities[i].StartTime) - @Html.DisplayFor(s => Model.ScheduleAvailabilities[i].EndTime)
                </div>
                <div class="float-right d-inline">
                    <input class="form-check-input checkBox" type="checkbox" asp-for="@Model.ScheduleAvailabilities[i].Selected" />
                    <input hidden asp-for="@Model.ScheduleAvailabilities[i].ScheduleAvailabilityId" />
                </div>
                @if (Model.Classes != null)
                {
                    @foreach (var c in Model.Classes)
                    {
                        @foreach (var cs in c.ClassSchedules)
                        {
                            @if (cs.ScheduleAvailabilityId == Model.ScheduleAvailabilities[i].ScheduleAvailabilityId)
                            {
                                @:<li class="list-group-item scheduledClass @c.ClassId">
                                @:<div class="offset-1">
                                    @c.Course.Name
                                    <a class="btn btn-danger float-right" asp-page="Index" asp-page-handler="Remove" asp-route-classId="@c.ClassId" asp-route-scheduleId="@cs.ScheduleAvailabilityId" type="button">Remove</a>
                                    @:</div>
                                @:</li>
                        }
                        }
                    }

                }
            </li>
          }

@{
@:</ul>
        @:</div>
        <div class="row justify-content-center">
            <input class="btn btn-primary text-white fixed-bottom mx-auto m-1 w-50" id="saveBtn" type="submit" value="Save" />
        </div>
        }
        </form>
        </div>

        @section Scripts{
            <script>
                $(document).ready(function () {
                    $('#TermId').change(function () {
                        $('#TermForm').submit();
                    });
                    $(window).scroll(function () {
                        var docHeight = $(document).height();
                        var toTop = $(window).scrollTop();
                        var windowHeight = window.innerHeight
                            || document.documentElement.clientHeight
                            || document.body.clientHeight;
                        var position = toTop + windowHeight;
                        if ((docHeight - position) < 100) {
                            $('#saveBtn').removeClass('fixed-bottom');
                        }
                        else if ((docHeight - position) > 150) {
                            if (!$('#saveBtn').hasClass('fixed-bottom')) {
                                $('#saveBtn').addClass('fixed-bottom');
                            }
                        }
                    });
                    $('.checkBox').each(function () {
                        $(this).prop('checked', false);
                    });
                    $('#ClassId').change(function () {
                        $(".scheduledClass").each(function () {
                            if ($(this).hasClass($('#ClassId').val())) {
                                $(this).css("background-color", "#85dcff");
                            }
                            else {
                                $(this).css("background-color", "");
                            }
                        })
                    })
                });
            </script>
        }